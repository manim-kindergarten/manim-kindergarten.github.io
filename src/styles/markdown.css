/* https://github.com/antfu/prism-theme-vars */
@import 'prism-theme-vars/base.css';
@import 'https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.15.3/katex.min.css';
@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono&display=swap');


.prose {
  animation: fadein-shift-x-4-800 cubic-bezier(0, 0, 0.2, 1) 0.8s;
  --prism-font-family: 'DM Mono', monospace;
}

.prose img {
  margin: 0.5rem auto;
}

html:not(.dark) .prose {
  --prism-foreground: #393a34;
  --prism-background: #fbfbfb;
  --prism-comment: #a0ada0;
  --prism-string: #b56959;
  --prism-literal: #2f8a89;
  --prism-number: #296aa3;
  --prism-keyword: #1c6b48;
  --prism-function: #6c7834;
  --prism-boolean: #1c6b48;
  --prism-constant: #a65e2b;
  --prism-deleted: #a14f55;
  --prism-class: #2993a3;
  --prism-builtin: #ab5959;
  --prism-property: #b58451;
  --prism-namespace: #b05a78;
  --prism-punctuation: #8e8f8b;
  --prism-decorator: #bd8f8f;
  --prism-regex: #ab5e3f;
  --prism-json-property: #698c96;
  --prism-selector: #6c7834;
  --un-prose-borders: #dddddd;
}

html.dark .prose {
  --prism-foreground: #d4cfbf;
  --prism-background: #151515;
  --prism-comment: #758575;
  --prism-string: #d48372;
  --prism-literal: #429988;
  --prism-keyword: #4d9375;
  --prism-boolean: #1c6b48;
  --prism-number: #6394bf;
  --prism-variable: #c2b36e;
  --prism-function: #a1b567;
  --prism-deleted: #a14f55;
  --prism-class: #54b1bf;
  --prism-builtin: #e0a569;
  --prism-property: #dd8e6e;
  --prism-namespace: #db889a;
  --prism-punctuation: #858585;
  --prism-decorator: #bd8f8f;
  --prism-regex: #ab5e3f;
  --prism-json-property: #6b8b9e;
  --prism-line-number: #888888;
  --prism-line-number-gutter: #eeeeee;
  --prism-line-highlight-background: #444444;
  --prism-selection-background: #444444;
  --prism-selector: #a1b567;
  --un-prose-borders: #333333;
}

.prose a:hover {
  color: teal;
}

.prose blockquote {
  color: gray;
}

.prose ol>li>ol {
  list-style-type: lower-roman !important;
}

.prose ol>li>ol>li>ol {
  list-style-type: lower-latin !important;
}

.prose :where(:not(pre) > code):not(.not-prose)::before, .prose :where(:not(pre) > code):not(.not-prose)::after {
  content: "" !important;
}

.prose :where(:not(pre) > code):not(.not-prose) {
  background: rgba(192, 192, 192, 0.175) !important;
  padding: 0.1rem 0.2rem;
  border-radius: 0.2rem;
}

.prose :where(code):not(.not-prose) {
  font-family: 'JetBrains Mono', monospace !important;
}
